@page "/login"
@layout LoginLayout
@using EkoRestaurant.Data
@using Microsoft.AspNetCore.Identity
@inject NavigationManager NavigationManager
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


<MudGrid Class="login-body">
    <MudItem Style="width:60%;">
        <a href=""> <img class="login-big-logo" src="Images/login-logo.svg" style="height:auto;  width: 100%; margin-right: 10px" /></a>
    </MudItem>
    <MudItem Class="login-body-form" Style="float: right; width:40%;">
        <div>
            <a class="navbar-brand" href=""> <img class="login-small-logo" src="Images/login-logo.svg" style="height: 167px; width: 166px ; margin-right: 10px" /></a>
            <h6 class="h6-quicksand">EkoRestaurant</h6>
        </div>
        <h1>Sign in</h1>
        <MudForm Style="margin-left:50px;margin-right:50px">
            <MudTextField @bind-Value="username" Label="UserName" />
            <MudTextField InputType="InputType.Password" @bind-Value="pass" Label="Password" />
            <MudButton Color="Color.Primary" OnClick="ValidateUser">Login</MudButton>
        </MudForm>
    </MudItem>
</MudGrid>


@code {
    private String username;
    private string pass;

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    private async Task<bool> ValidateUser()
    {
        ApplicationUser user = await UserManager.FindByNameAsync(username);
        if (user != null)
        {            
            SignInResult result = await SignInManager.PasswordSignInAsync(user, pass, true, false);

            if (result.Succeeded)
            {
                NavigationManager.NavigateTo("/");

                return await Task.FromResult(true);
            }
        }

        //TODO afficher une erreur
        NavigationManager.NavigateTo("/login");
        return await Task.FromResult(false);
    }
}
