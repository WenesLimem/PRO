@page "/ingredients/{Id:int}"
@using EkoRestaurant.Services
@using EkoRestaurant.Data 
@using EkoRestaurant.Extensions
@inject IngredientsService IngredientsService
@inject IngredientCategoriesService IngCatService
@inject ISnackbar Snackbar
@inject IDialogService Dialogservice
@inject NavigationManager nm
<MudGrid>
    <MudItem xs="12">
        <div class="page-title dark-color">Stocks</div>

        <div class="h2-quicksand dark-color">@currentIngredient.Name</div>
    </MudItem>
    <MudItem xs="12">

        <MudButton  Style="float: left" Class="btn-mud-white-bg-rounded h6-quicksand" OnClick="@AddIngredientToList" Variant="Variant.Filled"><img src="Images/Vector.svg" style="margin-right: 5px">Ajouter à la liste des course</MudButton>
        <MudButton Style="float: left; margin-left: 10px" Class="btn-mud-white-bg-rounded h6-quicksand" OnClick="@OpenModifiyIngredientDialog" Variant="Variant.Filled"><img src="Images/Vector.svg" style="margin-right: 5px">Editer</MudButton>
        <MudIconButton Icon="@Icons.Material.Filled.DeleteForever" Color="Color.Error" Style="float:right;" ButtonType="ButtonType.Submit" OnClick="@DeleteIngredient"></MudIconButton>
        </MudItem>
    
    <MudItem xs="3">
    <MudCard Elevation="4">
        <MudCardContent>
            <MudText >Prix</MudText>
            <MudText Class="details-grid-content dark-color">@currentIngredient.UnitPrice CHF</MudText>
        </MudCardContent>
    </MudCard>
     </MudItem>
    <MudItem xs="3">
        <MudCard Elevation="4">
            <MudCardContent>
                <MudText >Restant</MudText>
                <MudText Class="details-grid-content" Color="Color.Error">@currentIngredient.UnitInStock pce</MudText>
            </MudCardContent>
        </MudCard>
            
    </MudItem>
    <MudItem xs="3">
        <MudCard Elevation="4">
            <MudCardContent>
                <MudText >Date de préemption</MudText>
                <MudText Class="details-grid-content" Color="Color.Info">@currentIngredient.ExpirationDate </MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="3">
        <MudCard Elevation="4">
            <MudCardContent>
                <MudText >Fournisseur</MudText>
                @if (currentIngredient.Producer == null)
                {
                    <MudText Class="details-grid-content dark-color"> N/A </MudText>
                }
                else
                {
                    <MudText Class="details-grid-content dark-color">@currentIngredient.Producer </MudText>
                }
            </MudCardContent>
        </MudCard>
                
    </MudItem>
    
    
    <MudItem xs="6">
        <MudCard Elevation="4">
            
            <MudCardContent>
                <MudText >Catégorie</MudText>
                  @if (currentIngredient.Category == null)
                                {
                                    <MudText Class="details-grid-content dark-color"> N/A </MudText>
                                }
                                else
                                {
                                    <MudText Class="details-grid-content dark-color">@currentIngredient.Category.Name </MudText>
                                }
               
            </MudCardContent>
        </MudCard>
    </MudItem>
            
  

    
</MudGrid>


@code {

    [Parameter]
    public int Id { get; set; }

    public List<Ingredient> listeDesCourse = new();

    public Ingredient currentIngredient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        currentIngredient = IngredientsService.GetById(Id);
        if (currentIngredient.Category != null) currentIngredient.Category = IngCatService.GetById(currentIngredient.Category.Id);
    }


    private void AddIngredientToList()
    {
        listeDesCourse.Add(currentIngredient);
        Snackbar.Add(currentIngredient.Name + " ajouté à la liste des courses", severity: Severity.Success);
    }

    private async  void OpenModifiyIngredientDialog()
    {
        var param = new DialogParameters();
        param.Add("CurrentIngredient",currentIngredient);
        var dialog = Dialogservice.Show<DialogEditCreateIngredient>("Modifier :",param);
        var res = await dialog.Result;
        if (!res.Cancelled)
        {
            var result = (Ingredient) res.Data;
            try
            {

                IngredientsService.Edit(result);
                IngredientsService.SaveChanges();
                Snackbar.Add("Edition successful", Severity.Success);
                currentIngredient = result;
                
            }
            catch (Exception e)
            {
                Snackbar.Add("Erreur est survenue lors du modéficaiton", Severity.Error);
                
            }
        }
        StateHasChanged();
    }

    private void DeleteIngredient()
    {
        IngredientsService.Delete(currentIngredient);
        IngredientsService.SaveChanges();
        Snackbar.Add("Deleted successfully ", Severity.Success);
        nm.NavigateTo("/ingredients");
      
    }

}